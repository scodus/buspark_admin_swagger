openapi: 3.0.0
info:
  title: Bus Reservation
  description: Bus Reservation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://buspark.scodus.com/api/v2
    description: Base URL
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: user
  - name: site-setting
  - name: bus
  - name: location
  - name: route
  - name: bus schedule
paths:
  /user-detail:
    get:
      tags:
        - user
      summary: get profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - user
      summary: update profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: samiti
                last_name:
                  type: integer
                  example: '1'
                image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /password-change:
    post:
      tags:
        - user
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                old_password:
                  type: integer
                  example: '1234'
                new_password:
                  type: integer
                  example: '12345'
                new_password_confirmation:
                  type: integer
                  example: '12345'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - user
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: bikashxaus@gmail.com
                password:
                  type: integer
                  example: '1234'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /logout:
    post:
      tags:
        - user
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /refresh-token/{refresh_token}:
    post:
      tags:
        - user
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password-mail:
    post:
      tags:
        - user
      summary: reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: bikashxaus@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password-otp-verification:
    post:
      tags:
        - user
      summary: reset password otp verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  example: kGbD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password:
    post:
      tags:
        - user
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: string
                  example: kGbD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /site-setting:
    get:
      tags:
        - site-setting
      summary: site-setting
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus:
    get:
      tags:
        - bus
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/list/paginated:
    get:
      tags:
        - bus
      summary: list paginated
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/{id}:
    get:
      tags:
        - bus
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '38'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/{id}/seats:
    get:
      tags:
        - bus
      summary: bus seats
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '38'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location:
    get:
      tags:
        - location
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location/{id}:
    get:
      tags:
        - location
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '12'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location/by-slug/{slug}:
    get:
      tags:
        - location
      summary: single by slug
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: finn-wiggins
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route:
    get:
      tags:
        - route
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route/{id}:
    get:
      tags:
        - route
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule:
    get:
      tags:
        - bus schedule
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}:
    get:
      tags:
        - bus schedule
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '117'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

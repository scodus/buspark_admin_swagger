openapi: 3.0.0
info:
  title: 'Buspark Admin Api-v2 '
  description: 'Buspark Admin Api-v2 '
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://buspark.scodus.com/api/v2
    description: Base URL
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: user
  - name: site-setting
  - name: bus
  - name: location
  - name: route
  - name: bus schedule
  - name: bus schedule > for booking
  - name: bus booking
  - name: role
  - name: departure list
  - name: chalani
  - name: sales report
paths:
  /user-detail:
    get:
      tags:
        - user
      summary: get profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - user
      summary: update profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: samiti
                last_name:
                  type: integer
                  example: '1'
                image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /password-change:
    post:
      tags:
        - user
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                old_password:
                  type: integer
                  example: '1234'
                new_password:
                  type: integer
                  example: '12345'
                new_password_confirmation:
                  type: integer
                  example: '12345'
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - user
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@admin.com
                password:
                  type: integer
                  example: '1234'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /logout:
    post:
      tags:
        - user
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /refresh-token/{refresh_token}:
    post:
      tags:
        - user
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password-mail:
    post:
      tags:
        - user
      summary: reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: bikashxaus@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password-otp-verification:
    post:
      tags:
        - user
      summary: reset password otp verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  example: kGbD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /reset-password:
    post:
      tags:
        - user
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: string
                  example: kGbD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /site-setting:
    get:
      tags:
        - site-setting
      summary: site-setting
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus:
    get:
      tags:
        - bus
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/list/paginated:
    get:
      tags:
        - bus
      summary: list paginated
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '8'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/{id}:
    get:
      tags:
        - bus
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '38'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/{id}/seats:
    get:
      tags:
        - bus
      summary: bus seats
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '38'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location:
    get:
      tags:
        - location
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location/{id}:
    get:
      tags:
        - location
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '12'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /location/by-slug/{slug}:
    get:
      tags:
        - location
      summary: single by slug
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: finn-wiggins
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route:
    get:
      tags:
        - route
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route/{id}:
    get:
      tags:
        - route
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/search/for-booking:
    get:
      tags:
        - bus schedule > for booking
      summary: search list
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          schema:
            type: integer
          example: '1'
        - name: to
          in: query
          schema:
            type: integer
          example: '2'
        - name: date
          in: query
          schema:
            type: string
          example: '2080-05-31'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{bus_schedule_id}/for-booking:
    get:
      tags:
        - bus schedule > for booking
      summary: single (get bus seat)
      security:
        - bearerAuth: []
      parameters:
        - name: bus_schedule_id
          in: path
          schema:
            type: integer
          required: true
          example: '127'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule:
    get:
      tags:
        - bus schedule
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - bus schedule
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                route_id:
                  type: integer
                  example: '1'
                bus_id:
                  type: integer
                  example: '38'
                departure_date:
                  type: string
                  example: '2080-04-05'
                departure_date_ad:
                  type: string
                  example: '2023-07-21'
                departure_time:
                  type: string
                  example: '20:00'
                status:
                  type: string
                  example: Active
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule-search-by-dates:
    get:
      tags:
        - bus schedule
      summary: list by departure dates
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
          example: '2080-04-31'
        - name: to_date
          in: query
          schema:
            type: string
          example: '2080-04-32'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}:
    get:
      tags:
        - bus schedule
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '127'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - bus schedule
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PUT
                departure_time: '21:00'
                status: Active
                is_discount_available: 1
                main_route_discount: 3
                sub_route_discount:
                  - from_id: '1'
                    to_id: '9'
                    price: '12'
                    discount: '2'
                    status: Active
                  - from_id: '8'
                    to_id: '9'
                    price: '10'
                    discount: null
                    status: Active
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '127'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/route/{route_id}/buses:
    get:
      tags:
        - bus schedule
      summary: get route buses
      security:
        - bearerAuth: []
      parameters:
        - name: route_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/bus/{bus_id}/route:
    get:
      tags:
        - bus schedule
      summary: get bus route
      security:
        - bearerAuth: []
      parameters:
        - name: bus_id
          in: path
          schema:
            type: integer
          required: true
          example: '38'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/status-change:
    post:
      tags:
        - bus schedule
      summary: status change
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                status:
                  type: string
                  example: Active
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/booking-status-change:
    post:
      tags:
        - bus schedule
      summary: booking status change
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                booking_status:
                  type: string
                  example: Open
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/departure-time-change:
    post:
      tags:
        - bus schedule
      summary: departure time change
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                departure_time:
                  type: string
                  example: '21:00'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/bus-seats:
    get:
      tags:
        - bus schedule
      summary: scheduled bus seats
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/bus-seats/enable-disable:
    post:
      tags:
        - bus schedule
      summary: scheduled bus seats enable disable
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                seat_id:
                  - '53'
                  - '41'
                  - '54'
                  - '50'
                  - '46'
                  - '55'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/bus-seats/available-to:
    post:
      tags:
        - bus schedule
      summary: scheduled bus seats enabled Availability
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                seat_id:
                  - '53'
                  - '41'
                  - '54'
                available_to: Online
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/counters:
    get:
      tags:
        - bus schedule
      summary: scheduled bus seats Get Counters
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/bus-seats/counter-assign:
    post:
      tags:
        - bus schedule
      summary: scheduled bus seats Counter Assign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                seat_id:
                  - '55'
                counter_availability: 21
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '120'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/{id}/route-bus-facility-type-price:
    get:
      tags:
        - bus schedule
      summary: bus schedule->route bus facility type price
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '127'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-schedule/sub-route-discount/{id}:
    post:
      tags:
        - bus schedule
      summary: store sub route discount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PUT
                is_discount_available: 1
                main_route_discount: 3
                sub_route_discount:
                  - from_id: '1'
                    to_id: '9'
                    price: '12'
                    discount: '2'
                    status: Active
                  - from_id: '8'
                    to_id: '9'
                    price: '10'
                    discount: '4'
                    status: Active
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '127'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/pre-booking:
    get:
      tags:
        - bus booking
      summary: pre booking
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          schema:
            type: integer
          example: '1'
        - name: to
          in: query
          schema:
            type: integer
          example: '2'
        - name: schedule_id
          in: query
          schema:
            type: integer
          example: '127'
        - name: date
          in: query
          schema:
            type: string
          example: '2080-05-31'
        - name: seat_id[]
          in: query
          schema:
            type: integer
          description: seat_id is array where seat_id = ["53", "54"]
          example: '53'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/pre-booking-timeout:
    post:
      tags:
        - bus booking
      summary: pre booking timeout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schedule_id: 117
                seat_id:
                  - '50'
                  - '55'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/store:
    post:
      tags:
        - bus booking
      summary: store booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schedule_id: 127
                route_id: 1
                drop_location: X-place
                rate: 12
                discount: '1'
                paid: 15
                contact_phone: 98xxxxxxxx
                contact_name: X-man Mu
                seat_id:
                  - '53'
                sub_route_price:
                  from_id: 1
                  to_id: 9
                  sub_route_from: KTM
                  sub_route_to: Kohalpur
                  price: '12'
                  discount: '2'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/{id}/cancel:
    post:
      tags:
        - bus booking
      summary: cancel booking
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '626'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/users-my-booking/users-from-role:
    get:
      tags:
        - bus booking
      summary: Users/my booking users from role
      security:
        - bearerAuth: []
      parameters:
        - name: role_id
          in: query
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/users-my-booking/users:
    get:
      tags:
        - bus booking
      summary: Users/my booking - users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/users-my-booking:
    get:
      tags:
        - bus booking
      summary: Users/my booking history
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
          description: Departure Date From
          example: '2080-04-31'
        - name: to_date
          in: query
          schema:
            type: string
          description: Departure Date To
          example: '2080-04-32'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking-search:
    get:
      tags:
        - bus booking
      summary: list by bus-schedule
      security:
        - bearerAuth: []
      parameters:
        - name: bus_schedule_id
          in: query
          schema:
            type: integer
          example: '117'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking-cancelled-search:
    get:
      tags:
        - bus booking
      summary: list Cancelled by bus-schedule
      security:
        - bearerAuth: []
      parameters:
        - name: bus_schedule_id
          in: query
          schema:
            type: integer
          example: '117'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/{id}:
    get:
      tags:
        - bus booking
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '620'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus-booking/{id}/seat-cancel:
    post:
      tags:
        - bus booking
      summary: seat cancel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                new_booked_seat_id:
                  - '50'
                  - '55'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '632'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /role:
    get:
      tags:
        - role
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /role/{id}:
    get:
      tags:
        - role
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /role/{id}/users:
    get:
      tags:
        - role
      summary: role - users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /departure-list-search:
    get:
      tags:
        - departure list
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: departure_date
          in: query
          schema:
            type: string
          example: '2080-04-32'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chalani-list-search:
    get:
      tags:
        - chalani
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: departure_date
          in: query
          schema:
            type: string
          example: '2080-04-32'
        - name: bus_id
          in: query
          schema:
            type: integer
          example: '38'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sales-report-list-counter-online:
    get:
      tags:
        - sales report
      summary: list counter online
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
          example: '2080-04-17'
        - name: to_date
          in: query
          schema:
            type: string
          example: '2080-04-17'
        - name: from_date_ad
          in: query
          schema:
            type: string
          example: '2023-08-02'
        - name: to_date_ad
          in: query
          schema:
            type: string
          example: '2023-08-02'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sales-report-list-all-user:
    get:
      tags:
        - sales report
      summary: list all user
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
          example: '2080-04-17'
        - name: to_date
          in: query
          schema:
            type: string
          example: '2080-04-17'
        - name: from_date_ad
          in: query
          schema:
            type: string
          example: '2023-08-02'
        - name: to_date_ad
          in: query
          schema:
            type: string
          example: '2023-08-02'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
